syntax = "proto3";

package movie.v1.cmd;

import "common/types_common_v1.proto";
import "google/protobuf/empty.proto";

option go_package = "api/pb/v1/cmdpb";

service ContentApi {
    // Content
    rpc CreateContent(CreateContentRequest) returns (CreateContentResponse);
    rpc UpdateContent(UpdateContentRequest) returns (google.protobuf.Empty);
    rpc DeleteContent(DeleteContentRequest) returns (google.protobuf.Empty);
    //Internal
    rpc UpdateContentState(UpdateContentStateRequest) returns (google.protobuf.Empty);

    // Age Group
    rpc CreateAgeGroup(CreateAgeGroupRequest) returns (CreateAgeGroupResponse);
    rpc UpdateAgeGroup(UpdateAgeGroupRequest) returns (google.protobuf.Empty);
    rpc DeleteAgeGroup(DeleteAgeGroupRequest) returns (google.protobuf.Empty);

    // scenes
    rpc CreateScenes(CreateScenesRequest) returns (CreateScenesResponse);
    rpc UpdateScenes(UpdateScenesRequest) returns (google.protobuf.Empty);
    rpc DeleteScenes(DeleteScenesRequest) returns (google.protobuf.Empty);

    // meta
    rpc CreateMetaContent(CreateMetaContentRequest) returns (CreateMetaContentResponse);
    rpc UpdateMetaContent(UpdateMetaContentRequest) returns (google.protobuf.Empty);
    rpc DeleteMetaContent(DeleteMetaContentRequest) returns (google.protobuf.Empty);

    //Client comment content
    rpc CreateCommentContent(CreateCommentContentRequest) returns (common.Id);
    rpc UpdateCommentContent(UpdateCommentContentRequest) returns (google.protobuf.Empty);
    rpc LikeCommentContent(LikeCommentContentRequest) returns (google.protobuf.Empty);
    rpc ReportCommentContent(common.Id) returns (google.protobuf.Empty);
    //Admin & client comment content
    rpc DeleteCommentContent(common.Id) returns (google.protobuf.Empty);
    //Client Note content
    rpc CreateNoteContent(CreateNoteContentRequest) returns (common.Id);
    rpc UpdateNoteContent(UpdateNoteContentRequest) returns (google.protobuf.Empty);
    //Admin & client Note content
    rpc DeleteNoteContent(common.Id) returns (google.protobuf.Empty);
}

message ContentSubtitle {
    int64 subtitle_file_id = 1;
    bool is_close_caption =3;
    int64 dialect_id =4;
}
message ContentAudio {
    int64 audio_file_id = 1;
    bool has_visual_description=3;
    int64 dialect_id =4;
}

// Content
message CreateContentRequest {
    int64 movie_id                     = 1;
    string video_file_id               = 2;
    repeated int64 scenes_id           = 3;
    int32 age_restricted               = 4;
//  repeated int64 age_group_ids       = 5; age group has been removed from content
    common.ContentTypes type_id        = 6;
    repeated ContentAudio audios       = 7;
    repeated ContentSubtitle subtitles = 8;
}

message CreateContentResponse {
    int64 content_id = 1;
}

message UpdateContentRequest {
    int64 content_id                   = 1;
    int64 movie_id                     = 2;
    string video_file_id               = 3;
    repeated int64 scenes_id           = 4;
    int32 age_restricted               = 5;
//  repeated int64 age_group_ids       = 6; age group has been removed from content
    common.ContentTypes type_id        = 7; 
    repeated ContentAudio audios       = 8;
    repeated ContentSubtitle subtitles = 9;
}

message UpdateContentStateRequest {
    int64 content_id                   = 1;
    common.ContentState state                   = 2;
}

message DeleteContentRequest {
    int64 content_id = 1;
}

message DeleteContentResponse {
    int64 content_id = 1;
}

// age group
message CreateAgeGroupRequest {
    int32 from = 1;
    int32 to   = 2;
}

message CreateAgeGroupResponse {
    int64 age_group_id = 1;
}

message UpdateAgeGroupRequest {
    int64 age_group_id = 1;
    int32 from         = 2;
    int32 to           = 3;
}
 
message DeleteAgeGroupRequest {
    int64 age_group_id = 1;
}
 
// Scenes
message CreateScenesRequest {
    common.MultiLingualString title = 1;
}

message CreateScenesResponse {
    int64 scenes_id = 1;
}

message UpdateScenesRequest {
    int64 scenes_id                 = 1;
    common.MultiLingualString title = 2;
}
  
message DeleteScenesRequest {
    int64 scenes_id = 1;
}
 
// Meta Content
message CreateMetaContentRequest {
    common.MetaContent meta_content = 1;
}

message CreateMetaContentResponse {
    int64 meta_content_id = 1;
}

// Note that content_id and type cannot be changed! server will fetch the data first and then it will update it.
message UpdateMetaContentRequest {
    common.MetaContent meta_content = 1;
}
 
message DeleteMetaContentRequest {
    int64 meta_content_id = 1;
}
 
message CreateCommentContentRequest {
    int64 content_id = 1;
    string comment = 2;
    int64 start_time = 3;
    optional int64 end_time = 4;
  }
  
  message UpdateCommentContentRequest {
      int64 id = 1; 
      string comment = 2;
      int64 start_time = 3;
      optional int64 end_time = 4;
  }
  
  message ActiveCommentContentRequest {
    repeated int64 ids = 1; 
  }
  
  message LikeCommentContentRequest {
    int64 comment_id = 1;
    optional bool like = 2;
  }

  message CreateNoteContentRequest {
    int64 content_id = 1;
    string note = 2;
    int64 start_time = 3;
    optional int64 end_time = 4;
  }
  
  message UpdateNoteContentRequest {
    int64 id = 1; 
    string note = 2;
    int64 start_time = 3;
    optional int64 end_time = 4;
  }