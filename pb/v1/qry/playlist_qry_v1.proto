syntax = "proto3";

package movie.v1.qry;

import "common/types_common_v1.proto";

option go_package = "api/pb/v1/qrypb";

service PlaylistApi {
  rpc ListPlaylists(ListPlaylistsRequest) returns (ListPlaylistsResponse);
  rpc ListPlaylistItems(ListPlaylistItemsRequest) returns (ListPlaylistItemsResponse);
  rpc ListWatchLaters(ListWatchLatersRequest) returns (ListWatchLatersResponse);
  rpc ListFavorites(ListFavoritesRequest) returns (ListFavoritesResponse);
  rpc ListWatchedMovies(ListWatchedMoviesRequest) returns (ListWatchedMoviesResponse);
}

message ListPlaylistsRequest {
  common.OffsetPaginationRequest page =1;
}

message ListPlaylistItemsRequest {
    int64 playlist_id                        = 1;
    common.OffsetPaginationRequest page = 2;
}

message ListPlaylistsResponse {
  message Playlist {
    int64 id = 1; 
    string title = 2;
    string description = 3;
    bool is_public = 4;
  }
  int64 total_count = 1;
  repeated Playlist list = 2;
}

message PlaylistItem {
  message Movie{
    common.Movie movie       = 1;
    repeated common.Genre wanted_genres=2;
  }
  int64 id = 1; 
  common.PlaylistRefType ref_type = 3;
  oneof details {
    Movie movie       = 4;
    common.Franchise franchise = 5;
    common.Series series  = 6;
  }
}

message ListPlaylistItemsResponse {
  int64 total_count = 1;
  repeated PlaylistItem list = 2;
}

message ListWatchLatersRequest {
  common.OffsetPaginationRequest page = 2;
}

message ListWatchLatersResponse {
  int64 total_count = 1;
  repeated PlaylistItem list = 2;
}

message ListFavoritesRequest {
  common.OffsetPaginationRequest page = 2;
}

message ListFavoritesResponse {
  int64 total_count = 1;
  repeated PlaylistItem list = 2;
}

message ListWatchedMoviesRequest {
  common.OffsetPaginationRequest page = 2;
}

message ListWatchedMoviesResponse {
  int64 total_count = 1;
  repeated PlaylistItem list = 2;
}