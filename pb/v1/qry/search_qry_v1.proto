syntax = "proto3";

package movie.v1.qry;

import "common/types_common_v1.proto";

option go_package = "api/pb/v1/qrypb";

service SearchApi {
    rpc SearchMovies(SearchMoviesRequest) returns (SearchMoviesResponse);
    rpc SearchSeries(SearchSeriesRequest) returns (SearchSeriesResponse);
    rpc AdvanceSearchMovies(AdvanceSearchMoviesRequest) returns (AdvanceSearchMoviesResponse);
    //unuse
    rpc Search(common.QueryOffsetPaginationRequest) returns (SearchResponse);
}

 
message SearchResponse {
    message Franchises  {
        common.Franchise franchise=1;
        repeated common.Movie movies=2; 
    }
    repeated common.Movie movies=1;
    repeated common.Series series=2;
    repeated Franchises franchises = 3;
    repeated common.Genre wantedGenres=4;
    repeated common.AgeGroup wantedAgeGroups=5;
}

message SearchSeriesRequest {
    string searched_title = 1;
}

message SearchSeriesResponse {
    repeated common.Series series = 1;
}

message SearchMoviesRequest {
    string searched_title = 2;
}

message SearchMoviesResponse {
    message Movie {
        int64 movie_id                  = 1;
        int64 movie_type_id             = 2;
        common.MultiLingualString title = 3;
        bool is_coming_soon             = 4;
        //int32 produced_year             = 5; removed in favor of range date
        optional int64 production_start_date = 6;
        optional int64 production_end_date = 7;
        bool is_play_free             = 8;
        bool is_download_free         = 9;
        common.MultiLingualString criticism             = 10;
        double imdb         = 11;
    }
    repeated Movie movies = 1;
}

message AdvanceSearchMoviesRequest {
    bool and_mode= 1;                             // Or-mode otherwise
    common.QueryOffsetPaginationRequest searched_query = 2;
    repeated int64 genre_ids = 3;
    repeated int64 age_group_ids = 4;
    repeated int64 scenes_ids = 5;
    optional double imdb_from         = 6;
    optional double imdb_to         = 7;
    optional bool is_play_free             = 8;
    optional bool is_download_free         = 9;
    optional string production_country                   = 10;
    optional string filming_location                      = 11;
    optional int64 release_at_from          = 12;
    optional int64 release_at_to         = 13;
    repeated int64 person_ids=14;
}

message AdvanceSearchMoviesResponse {

    message MoviesPlayedByPerson{
        int64 person_id =1;
        repeated common.Movie movies_played=2;
        int64 total_movies_count =3;
    }
    repeated common.Movie movies=1;
    int64 total_movie_count =2;
    repeated common.Person people=3;
    int64 total_people_count =4;
    repeated common.Series series=5;
    int64 total_series_count =6;
    repeated common.Franchise franchises=7;
    int64 total_franchises_count =8;
    repeated MoviesPlayedByPerson movies_played_by_people=9;
    repeated common.Genre wanted_genres=10;
}
