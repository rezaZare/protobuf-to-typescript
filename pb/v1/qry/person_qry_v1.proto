syntax = "proto3";

package movie.v1.qry;

import "common/types_common_v1.proto";

option go_package = "api/pb/v1/qrypb";

service PersonApi {
    rpc GetPerson(GetPersonRequest) returns (GetPersonResponse);
    rpc GetPageOfPerson(common.OffsetPaginationRequest) returns (GetPageOfPersonResponse);
    rpc SearchPageOfPerson(common.QueryOffsetPaginationRequest) returns (SearchPageOfPersonResponse);
    rpc GetPersonEventAwards(GetPersonEventAwardsRequest) returns (GetPersonEventAwardsResponse);
    rpc GetPersonMovieParticipations(GetPersonMovieParticipationsRequest) returns (GetPersonMovieParticipationsResponse);

}

message GetPersonMovieParticipationsRequest {
    int64 person_id = 1;
    enum RequestType {
        REQUEST_TYPE_UNKNOWN = 0;
        REQUEST_TYPE_ALL       = 1;
        REQUEST_TYPE_MOVIE  = 2;
        REQUEST_TYPE_EPISODES     = 3;
    }
    RequestType request_type=2;
}

message GetPersonMovieParticipationsResponse {

    repeated common.Movie movies=1;
}

message GetPersonEventAwardsRequest {
    int64 person_id = 1;
}

message GetPersonEventAwardsResponse {

    repeated common.CastAwardStateDetail award_states=1;
    repeated common.Festival wanted_festivals=2;
    repeated common.FestivalEvent wanted_festival_events=3;
    repeated common.Movie wanted_movies=4;
}
 
message GetPersonRequest {
    int64 person_id = 1;
}

// TODO: too much duplication over models, but we tried to keep the style of coding
message GetPersonResponse {
    common.Person person=1;
}

message GetPageOfPersonResponse {
    int64 total_count = 1;
    repeated  common.Person people=2;
}
  
message SearchPageOfPersonResponse {
    int64 total_count = 1;
    repeated common.Person people=2;
}